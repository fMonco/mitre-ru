


Межпроцессное взаимодействие
=========================================

Злоумышленники могут злоупотреблять механизмами межпроцессного взаимодействия (IPC) для выполнения локального кода или команд. IPC обычно используется процессами для обмена данными, взаимодействия друг с другом или синхронизации выполнения. IPC также часто используется для предотвращения таких ситуаций, как тупики, которые возникают, когда процессы застревают в циклическом ожидании.

Злоумышленники могут злоупотреблять IPC для выполнения произвольного кода или команд. Механизмы IPC могут отличаться в зависимости от ОС, но обычно они существуют в форме, доступной через языки программирования/библиотеки или собственные интерфейсы, такие как Windows Dynamic Data Exchange или Component Object Model. Среды Linux поддерживают несколько различных механизмов IPC, два из которых - сокеты и трубы. Средства выполнения более высокого уровня, такие как командные и скриптовые интерпретаторы, также могут использовать базовые механизмы IPC. Злоумышленники также могут использовать удаленные службы, такие как Distributed Component Object Model, для облегчения удаленного выполнения IPC.


Модель компонентных объектов
------------------------------------------------------------------------

Злоумышленники могут использовать модель компонентных объектов Windows (COM) для локального выполнения кода. COM - это компонент межпроцессного взаимодействия (IPC) родного интерфейса прикладного программирования (API) Windows, который обеспечивает взаимодействие между программными объектами или исполняемым кодом, реализующим один или несколько интерфейсов. С помощью COM клиентский объект может вызывать методы серверных объектов, которые обычно являются бинарными библиотеками динамических связей (DLL) или исполняемыми файлами (EXE). Удаленное выполнение COM облегчается с помощью удаленных служб, таких как Distributed Component Object Model (DCOM).

Существуют различные интерфейсы COM, которыми можно злоупотреблять для вызова произвольного исполнения с помощью различных языков программирования, таких как C, C++, Java и Visual Basic. Существуют также специфические объекты COM для непосредственного выполнения функций, выходящих за рамки выполнения кода, таких как создание запланированной задачи/задания, загрузка/исполнение без файлов и другие виды поведения противника, связанные с повышением привилегий и сохранением.


Динамический обмен данными
------------------------------------------------------------------------

Злоумышленники могут использовать Windows Dynamic Data Exchange (DDE) для выполнения произвольных команд. DDE - это клиент-серверный протокол для однократного и/или непрерывного межпроцессного взаимодействия (IPC) между приложениями. После установления связи приложения могут автономно обмениваться транзакциями, состоящими из строк, теплых ссылок на данные (уведомления об изменении элемента данных), горячих ссылок на данные (дублирование изменений в элементе данных) и запросов на выполнение команд.

Связывание и встраивание объектов (OLE), или возможность связывать данные между документами, первоначально была реализована с помощью DDE. Несмотря на то, что DDE была вытеснена Component Object Model, она может быть включена в Windows 10 и большинстве Microsoft Office 2016 с помощью ключей реестра.

Документы Microsoft Office могут быть отравлены командами DDE, напрямую или через встроенные файлы, и использованы для выполнения через фишинговые кампании или размещенный веб-контент, избегая использования макросов Visual Basic for Applications (VBA). Аналогично, злоумышленники могут заразить полезную нагрузку для выполнения приложений и/или команд на устройстве жертвы путем встраивания формул DDE в CSV-файл, предназначенный для открытия через программу электронных таблиц Windows.

DDE также может быть использован противником, работающим на взломанной машине и не имеющим прямого доступа к интерпретатору команд и сценариев. Выполнение DDE может быть вызвано удаленно через удаленные службы, такие как Distributed Component Object Model (DCOM).


Услуги XPC
------------------------------------------------------------------------

Злоумышленники могут предоставить демону службы XPC вредоносное содержимое для выполнения локального кода. macOS использует службы XPC для базового межпроцессного взаимодействия между различными процессами, например между демоном службы XPC и вспомогательными инструментами привилегированных приложений сторонних разработчиков. Приложения могут отправлять сообщения демону XPC Service, который запускается от имени root, с помощью низкоуровневого API XPC Service C или высокоуровневого API NSXPCConnection для обработки задач, требующих повышенных привилегий (например, сетевых подключений). Приложения отвечают за определение протокола, который служит образцом служб XPC. Разработчики обычно используют службы XPC для обеспечения стабильности приложений и разделения привилегий между клиентом приложения и демоном.

Злоумышленники могут злоупотреблять службами XPC для выполнения вредоносного содержимого. Запросы на выполнение вредоносного содержимого могут передаваться через обработчик служб XPC приложения. Это может также включать выявление и использование неправильной проверки клиента XPC и/или плохой санации входных параметров для осуществления эксплойта с целью повышения привилегий.