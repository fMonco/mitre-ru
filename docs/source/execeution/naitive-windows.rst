


Нативный API
------------------------------------------------------------------------

Злоумышленники могут взаимодействовать с родным интерфейсом прикладного программирования (API) ОС для выполнения действий. Родные API обеспечивают контролируемые средства вызова низкоуровневых служб ОС внутри ядра, например, связанных с оборудованием/устройствами, памятью и процессами. Эти родные API используются ОС во время загрузки системы (когда другие компоненты системы еще не инициализированы), а также для выполнения задач и запросов во время рутинных операций.

Злоумышленники могут злоупотреблять этими функциями API ОС как средством реализации поведения. Подобно командному интерпретатору и интерпретатору сценариев, родной API и иерархия его интерфейсов обеспечивают механизмы взаимодействия и использования различных компонентов виктимизированной системы.

Функции Native API (например, NtCreateProcess) могут быть вызваны через системные вызовы / syscalls, но эти функции также часто открыты для приложений пользовательского режима через интерфейсы и библиотеки.  Например, такие функции, как Windows API CreateProcess или GNU fork, позволяют программам и скриптам запускать другие процессы. Это может позволить вызывающим API выполнить двоичный файл, запустить команду CLI, загрузить модули и т. д., поскольку существуют тысячи подобных функций API для различных системных операций.

Для взаимодействия с родными API также существуют программные фреймворки более высокого уровня, такие как Microsoft .NET и macOS Cocoa. Эти фреймворки обычно предоставляют языковые обертки/абстракции к функциям API и предназначены для простоты использования/портативности кода.

Злоумышленники могут использовать ассемблер для прямого или косвенного вызова системных вызовов в попытке подорвать защитные датчики и сигнатуры обнаружения, такие как API-крючки пользовательского режима. Злоумышленники также могут попытаться подделать датчики и защитные инструменты, связанные с мониторингом API, например, отсоединить контролируемые функции с помощью инструментов Disable или Modify.


Выполнение без использования серверов
------------------------------------------------------------------------

Злоумышленники могут использовать сервисы без использования серверов для выполнения произвольного кода в облачных средах, интеграции и автоматизации. Многие облачные провайдеры предлагают различные ресурсы без использования серверов, включая вычислительные машины, службы интеграции приложений и веб-серверы.

Злоумышленники могут использовать эти ресурсы различными способами для выполнения произвольных команд. Например, злоумышленники могут использовать функции без использования серверов для выполнения вредоносного кода, такого как вредоносное ПО для майнинга криптовалют (т. е. перехвата ресурсов). Злоумышленники также могут создавать функции, позволяющие в дальнейшем компрометировать облачную среду. Например, злоумышленник может использовать разрешение IAM:PassRole в AWS или iam.serviceAccounts.actAs в Google Cloud для добавления дополнительных облачных ролей в без использования серверов облачную функцию, которая затем сможет выполнять действия, недоступные исходному пользователю.

Функции без использования серверов также могут вызываться в ответ на события в облаке (т. е. Event Triggered Execution), что потенциально обеспечивает постоянное выполнение в течение долгого времени. Например, в среде AWS злоумышленник может создать функцию Lambda, которая автоматически добавляет пользователю дополнительные облачные учетные данные, и соответствующее правило событий CloudWatch, вызывающее эту функцию при создании нового пользователя. Аналогичным образом злоумышленник может создать рабочий процесс Power Automate в среде Office 365, который пересылает все электронные письма, получаемые пользователем, или создает анонимные ссылки общего доступа при предоставлении пользователю доступа к документу в SharePoint.


Общие модули
------------------------------------------------------------------------

Злоумышленники могут выполнять вредоносную полезную нагрузку через загрузку общих модулей. Общие модули - это исполняемые файлы, которые загружаются в процессы для обеспечения доступа к многократно используемому коду, такому как специальные пользовательские функции или вызов функций API ОС (т. е. Native API).

Злоумышленники могут использовать эту функциональность для выполнения произвольной полезной нагрузки на системе жертвы. Например, злоумышленники могут модулировать функциональность своих вредоносных программ в общие объекты, которые выполняют различные функции, такие как управление сетевыми коммуникациями C2 или выполнение определенных действий на объекте.

Загрузчик модулей в Linux и macOS может загружать и исполнять общие объекты из произвольных локальных путей. Эта функциональность содержится в файле dlfcn.h в таких функциях, как dlopen и dlsym. Хотя macOS может исполнять файлы .so, в обычной практике используются файлы .dylib.

Загрузчику модулей Windows можно поручить загружать библиотеки DLL из произвольных локальных путей и произвольных сетевых путей Universal Naming Convention (UNC). Эта функциональность находится в NTDLL.dll и является частью Windows Native API, который вызывается из таких функций, как LoadLibrary, во время выполнения.


Средства развертывания программного обеспечения
------------------------------------------------------------------------

Злоумышленники могут получить доступ к установленным в корпоративной сети наборам программного обеспечения сторонних производителей, таким как системы администрирования, мониторинга и развертывания, и использовать их для перемещения по сети. Сторонние приложения и системы развертывания программного обеспечения могут использоваться в сетевой среде для целей администрирования (например, SCCM, HBSS, Altiris и т. д.).

Доступ к сторонней системе программного обеспечения в масштабах сети или предприятия может позволить злоумышленнику удаленно выполнять код на всех системах, подключенных к такой системе. Доступ может быть использован для перехода к другим системам, сбора информации или достижения определенного эффекта, например стирания жестких дисков на всех конечных устройствах. Сетевая инфраструктура также может иметь инструменты администрирования, которые могут быть использованы злоумышленниками аналогичным образом. 

Разрешения, необходимые для выполнения этого действия, зависят от конфигурации системы; может быть достаточно локальных учетных данных для прямого доступа к сторонней системе, а может потребоваться учетная информация конкретного домена. Однако для входа в систему или для выполнения ее предназначения может потребоваться учетная запись администратора.


Инструментарий управления Windows
------------------------------------------------------------------------

Злоумышленники могут использовать инструменты управления Windows Management Instrumentation (WMI) для выполнения вредоносных команд и полезных нагрузок. WMI - это функция администрирования, которая обеспечивает единую среду для доступа к системным компонентам Windows. Служба WMI обеспечивает как локальный, так и удаленный доступ, хотя последний облегчается удаленными службами, такими как Distributed Component Object Model (DCOM) и Windows Remote Management (WinRM). Удаленный WMI через DCOM работает через порт 135, тогда как WMI через WinRM работает через порт 5985 при использовании HTTP и 5986 для HTTPS.

Противник может использовать WMI для взаимодействия с локальными и удаленными системами и использовать его как средство для выполнения различных действий, таких как сбор информации для обнаружения, а также удаленное выполнение файлов как часть Lateral Movement.  